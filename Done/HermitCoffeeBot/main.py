# -*- coding: cp1251 -*-
#by de_jure
#main.py
#14.01.20(–≤–µ—á–µ—Ä) - 05.02.20

import datetime
import time
import sqlite3
import telebot
from toolbox import *


bot = telebot.TeleBot('979495669:AAGw92_pC3Wf_lruyVC_ganYndDddokf9Yo')
warns_max = 3
menu = '‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è\n–≠—Å–ø—Ä–µ—Å—Å–æ 14/22\n–ê–º–µ—Ä–∏–∫–∞–Ω–æ 14/24\n–ö–∞–ø—É—á–∏–Ω–æ 23/25/28\n–õ–∞—Ç—Ç–µ 24/28/32\n–†–∞—Ñ 30/37/45' + \
							'\n–ö–∞–∫–∞–æ 20/25/30\n–§–ª—ç—Ç –£–∞–π—Ç 35\n–ß–∞–π 15\n–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥ 23/28/33\n‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è‚òïÔ∏è'
modersid_online = []
modersid = []
adminsid = []
password = '6896343'
orders = []
orders_2 = []
global addadmin, addmoder, deladmin, orderspersm
addadmin = False
addmoder = False
deladmin = False
orderspersm = 0
global communication_id, communication_id_moder
global unban
unban = False
communication_id = None
communication_id_moder = None
db.createdb()
db.mdrsim(modersid)
db.admsim(adminsid)


# –ó–∞–≥—Ä—É–∑–∫–∞ —Ü–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞
file = open('price.txt', 'r')
prices = {}
f = file.read().splitlines()
for line in f:
	k = line.split('=')[0]
	a = line.split('=')[1]
	prices[k] = a
file.close()

# –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ª–æ–≥–æ–≤
log_data = str(datetime.datetime.today().strftime("%d%m%Y_%H%M%S"))
log = open('logs/log_' + log_data + '.txt', 'a')
log.write(str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + ' [BOT] –Ø –≤–∫–ª—é—á–∏–ª—Å—è\n')
print(str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + ' [BOT] –Ø –≤–∫–ª—é—á–∏–ª—Å—è')
log.close()

# –í–∑—è—Ç—å –º–µ–Ω—é
#file_menu = open('menu.txt', 'r')
#menu = file_menu.read()
#file_menu.close()



'''–ì–ª–∞–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
/start, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, '–º–µ–Ω—é', '–º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '–æ—Ç–º–µ–Ω–∞'.

'''
class main:
	# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@bot.message_handler(commands=['start'])
	def start(message):
		if db.finduser(message) == None:
			bot.send_message(message.chat.id, '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º, —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n' +\
				'–û–±–µ—â–∞–µ–º –Ω–µ –∑–≤–æ–Ω–∏—Ç—å –Ω–æ—á—å—éüôà', \
				reply_markup=board.send_phone)
		else:
			if db.whatwrns(message) < warns_max:
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
	# –û—Ç—Å–µ–∫–∞–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤
	@bot.message_handler(content_types=['sticker', 'voice', 'audio', 'document', 'photo', 'video', 'video_note', \
		'location'])
	def goaway(message):
		pass
	
	# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	@bot.message_handler(content_types=['contact'])
	def read_contact_phone(message):
		if db.finduser(message) == None:
			if message.contact.phone_number[0] == '+':
				message.contact.phone_number = message.contact.phone_number[1:]
			db.createuser(message)
			bot.send_message(message.from_user.id, '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞üòÖ')
			if db.whatwrns(message) < warns_max:
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
		else:
			bot.send_message(message.from_user.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')
			if db.whatwrns(message) < warns_max:
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
	# –ö–Ω–æ–ø–∫–∞ '–ú–µ–Ω—é'
	@bot.message_handler(func=lambda message: message.text.lower() == '–º–µ–Ω—é')
	def show_menu(message):
		try:
			db.ordrsqu(message)
			bot.send_message(message.chat.id, menu)
		except:
			pass
	# –ö–Ω–æ–ø–∫–∞ '–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'
	@bot.message_handler(func=lambda message: message.text.lower() == '–º–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
	def mystats(message):
		try:
			bot.send_message(message.chat.id, 'üìä–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞üìä\n\n' + 
								'–ú–æ–π ID-–Ω–æ–º–µ—Ä: ' + str(message.from_user.id) + 
								'\n–í—Å–µ–≥–æ —Å–¥–µ–ª–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ' + str(db.ordrsqu(message)) + 
								'\n–ú–æ–∏ –≤—ã–≥–æ–≤–æ—Ä—ã: ' + str(db.whatwrns(message)) + 
								'\n\n')
		except:
			pass
	# –ö–Ω–æ–ø–∫–∞ '–û—Ç–º–µ–Ω–∞'
	@bot.message_handler(func=lambda message: message.text.lower() == '–æ—Ç–º–µ–Ω–∞')
	def cencel(message):
		try:
			try:
				orders.remove(find_order(message, orders))
			except:
				pass
			bot.send_message(message.from_user.id, '‚òπÔ∏è')
			db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass


'''–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
–ê–¥–º–∏–Ω–ø–∞–Ω–µ–ª—å, –º–æ–¥–µ—Ä–ø–∞–Ω–µ–ª—å, –∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ –∏
–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–µ—Ä–æ–≤/–∞–¥–º–∏–Ω–æ–≤, –ø—Ä–∏–Ω—è—Ç–∏–µ –∏ —Å–¥–∞—á–∞ —Å–º–µ–Ω—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.

'''
class adm:
	# –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∞–¥–º–∏–Ω–ø–∞–Ω–µ–ª—å
	@bot.message_handler(func=lambda message: message.text.lower() == '–∞–¥–º–∏–Ω. –º–µ–Ω—é')
	def admin_menu(message):
		if message.from_user.id in adminsid:
			bot.send_message(message.chat.id, 'adminpanel', reply_markup = board.adminmenu)
	# –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–µ—Ä–ø–∞–Ω–µ–ª—å
	@bot.message_handler(func=lambda message: message.text.lower() == '–º–æ–¥–µ—Ä. –º–µ–Ω—é')
	def moder_menu(message):
		if message.from_user.id in modersid:
			bot.send_message(message.chat.id, 'moderpanel', reply_markup = board.modermenu)
		else:
			if message.from_user.id in adminsid:
				bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º', reply_markup = board.mainmenu2)
	# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	@bot.message_handler(func=lambda message: message.text.lower() == '–∫–æ–ª-–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')
	def urskolvo(message):
		if message.from_user.id in adminsid:
			bot.send_message(message.chat.id, '–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ' + str(db.kolvo()))
	# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª-–≤–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –æ–Ω–ª–∞–π–Ω
	@bot.message_handler(func=lambda message: message.text.lower() == '–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã online')
	def modonline(message):
		if message.from_user.id in adminsid:
			bot.send_message(message.chat.id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ Online: ' + str(len(modersid_online)))
	# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
	@bot.message_handler(func=lambda message: message.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
	def add_moder(message):
		if message.from_user.id in adminsid:
			global addmoder
			addmoder = True
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–æ–≤–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞' \
																	'(–≤ —Ñ–æ—Ä–º–∞—Ç–µ 380*********)')
	# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
	@bot.message_handler(func=lambda message: message.text.lower() == '–¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
	def add_admin(message):
		if message.from_user.id in adminsid:
			global addadmin
			addadmin = True
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' \
																	'(–≤ —Ñ–æ—Ä–º–∞—Ç–µ 380*********)')
	# –£–¥–∞–ª–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞/–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.
	@bot.message_handler(func=lambda message: message.text.lower() in ['—É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
																		'—É–¥–∞–ª–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞'])
	def del_admin(message):
		if message.from_user.id in adminsid:
			global deladmin
			deladmin = True
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞' \
																	'(–≤ —Ñ–æ—Ä–º–∞—Ç–µ 380*********)')
	# –†–∞–∑–±–∞–Ω
	@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞–∑–±–∞–Ω')
	def unban(message):
		if message.from_user.id in adminsid:
			global unban
			unban = True
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞')
	# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')
	def adminlist(message):
		if message.from_user.id in adminsid:
			db.showall(message, bot, 2)
	# –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤.
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–ø–∏—Å–æ–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤')
	def adminlist(message):
		if message.from_user.id in adminsid:
			db.showall(message, bot, 1)
	# –ü—Ä–∏–Ω—è—Ç–∏–µ —Å–º–µ–Ω—ã.
	@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–∏–Ω—è—Ç—å —Å–º–µ–Ω—É')
	def acceptsm(message):
		if message.from_user.id in modersid:
			if message.from_user.id in modersid_online:
				bot.send_message(message.chat.id, '–í—ã —É–∂–µ –≤—ã—à–ª–∏ –Ω–∞ —Å–º–µ–Ω—É')
			else:
				modersid_online.append(message.from_user.id)
				bot.send_message(message.chat.id, '–í—ã –≤—ã—à–ª–∏ –Ω–∞ —Å–º–µ–Ω—É', reply_markup = board.mainmenu1)
				msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
					' [MODER ' + str(message.from_user.id) + '] –í—ã—à–µ–ª –Ω–∞ —Å–º–µ–Ω—É'
				log = open('logs/log_' + log_data + '.txt', 'a')
				log.write(msg + '\n')
				log.close()
				print(msg)
	# –°–¥–∞—á–∞ —Å–º–µ–Ω—ã
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–¥–∞—Ç—å —Å–º–µ–Ω—É')
	def acceptsm(message):
		if message.from_user.id in modersid:
			if message.from_user.id in modersid_online:
				global orderspersm
				modersid_online.remove(message.from_user.id)
				bot.send_message(message.chat.id, '–í—ã —Å–¥–∞–ª–∏ —Å–º–µ–Ω—É', reply_markup = board.mainmenu1)
				bot.send_message(message.chat.id, '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: ' + str(orderspersm), \
					reply_markup = board.mainmenu1)
				msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
					' [MODER ' + str(message.from_user.id) + '] –°–¥–∞–ª —Å–º–µ–Ω—É'
				log = open('logs/log_' + log_data + '.txt', 'a')
				log.write(msg + '\n')
				log.close()
				print(msg)
				if len(modersid_online) == 0:
					orderspersm = 0
			else:
				bot.send_message(message.chat.id, '–í—ã –Ω–µ –≤—ã—Ö–æ–¥–∏–ª–∏ –Ω–∞ —Å–º–µ–Ω—É')
	# –†–∞–∑—Ä—ã–≤ —Å–≤—è–∑–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
	@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞–∑–æ—Ä–≤–∞—Ç—å —Å–≤—è–∑—å')
	def endconnect(message):
		global communication_id_moder, communication_id
		if message.from_user.id in modersid:
			try:
				if message.from_user.id == communication_id_moder:
					bot.send_message(communication_id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –∑–∞–∫—Ä—ã–ª —á–∞—Ç')
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(communication_id_moder) + \
						'] –ü—Ä–µ—Ä–≤–∞–ª —Å–≤—è–∑—å —Å ' + str(communication_id)
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					communication_id = None
					communication_id_moder = None
					bot.send_message(message.from_user.id, '–°–≤—è–∑—å —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞', reply_markup=board.mainmenu1)
				elif message.from_user.id in modersid:
					bot.send_message(message.from_user.id, '–°–≤—è–∑—å —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞', reply_markup=board.mainmenu1)
			except:
					bot.send_message(message.from_user.id, '–°–≤—è–∑—å —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞', reply_markup=board.mainmenu1)


'''–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑, –≤—ã–±–æ—Ä –∫–æ—Ñ–µ, –≤—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞ –∏ –ø—Ä–∏–±–∞–≤–∫–∞ —Ü–µ–Ω—ã, –≤—ã–±–æ—Ä —Å–∞—Ö–∞—Ä–∞, –∫–Ω–æ–ø–∫–∞ '–ì–æ—Ç–æ–≤–æ', –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞,
–ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π(–∞—Å—Å–æ—Ä—Ç–∏).

–ö–æ—Ñ–µ:
–≠—Å–ø—Ä–µ—Å—Å–æ
–ê–º–µ—Ä–∏–∫–∞–Ω–æ
–ö–∞–ø—É—á–∏–Ω–æ
–õ–∞—Ç—Ç–µ
–†–∞—Ñ
–ö–∞–∫–∞–æ
–§–ª—ç—Ç –£–∞–π—Ç
–ß–∞–π
–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥

–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π -- –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏–ª–∏ –∞–¥–º–∏–Ω –ø–∞—Ä–æ–ª—è, –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞
—Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–æ–≤–æ–≥–æ/—É–¥–∞–ª—è–µ–º–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.

–ò–∑–±—Ä–∞–Ω–Ω–æ–µ –∏ —Ä–∞–±–æ—Ç–∞ —Å –Ω–∏–º

Callback –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤

'''
class crtorder:
	# –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑.
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑')
	def crtor(message):
		try:
			if db.whatwrns(message) < warns_max:
				if len(modersid_online) != 0:
					zakaz = order()
					zakaz.Constructor(db.finduser(message)[1], message.from_user.id)
					zakaz.status_1 = 1
					orders.append(zakaz)
					bot.send_message(message.chat.id, '–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ?üòä', reply_markup = board.potablemenu0)
				else:
					bot.send_message(message.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–µ—Çüò¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –≠—Å–ø—Ä–µ—Å—Å–æ.
	@bot.message_handler(func=lambda message: message.text.lower() == '—ç—Å–ø—Ä–µ—Å—Å–æ')
	def espresso(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–≠—Å–ø—Ä–µ—Å—Å–æ'
						find_order(message, orders).buf = '—ç—Å–ø—Ä–µ—Å—Å–æ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.espressosize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.espresso\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ê–º–µ—Ä–∏–∫–∞–Ω–æ.
	@bot.message_handler(func=lambda message: message.text.lower() == '–∞–º–µ—Ä–∏–∫–∞–Ω–æ')
	def americano(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–ê–º–µ—Ä–∏–∫–∞–Ω–æ'
						find_order(message, orders).buf = '–∞–º–µ—Ä–∏–∫–∞–Ω–æ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.americanosize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.americano\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ö–∞–ø—É—á–∏–Ω–æ.
	@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–ø—É—á–∏–Ω–æ')
	def capuchino(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–ö–∞–ø—É—á–∏–Ω–æ'
						find_order(message, orders).buf = '–∫–∞–ø—É—á–∏–Ω–æ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.smlsize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.capuchino\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.smlsize)
		except:
			pass
	# –õ–∞—Ç—Ç–µ.
	@bot.message_handler(func=lambda message: message.text.lower() == '–ª–∞—Ç—Ç–µ')
	def latte(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–õ–∞—Ç—Ç–µ'
						find_order(message, orders).buf = '–ª–∞—Ç—Ç–µ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.smlsize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.latte\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –†–∞—Ñ.
	@bot.message_handler(func=lambda message: message.text.lower() == '—Ä–∞—Ñ')
	def raf(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–†–∞—Ñ'
						find_order(message, orders).buf = '—Ä–∞—Ñ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.smlsize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.raf\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ö–∞–∫–∞–æ.
	@bot.message_handler(func=lambda message: message.text.lower() == '–∫–∞–∫–∞–æ')
	def cacao(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–ö–∞–∫–∞–æ'
						find_order(message, orders).buf = '–∫–∞–∫–∞–æ'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.smlsize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.cacao\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥.
	@bot.message_handler(func=lambda message: message.text.lower() == '–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥')
	def hotcho(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–ì–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥'
						find_order(message, orders).buf = '–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥'
						bot.send_message(message.chat.id, '–ö–∞–∫–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞?', reply_markup = board.smlsize)
						find_order(message, orders).status_1 = 2
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.hotcho\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –§–ª—ç—Ç –£–∞–π—Ç.
	@bot.message_handler(func=lambda message: message.text.lower() == '—Ñ–ª—ç—Ç —É–∞–π—Ç')
	def flatwhite(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–§–ª—ç—Ç –£–∞–π—Ç'
						find_order(message, orders).buf = '—Ñ–ª—ç—Ç —É–∞–π—Ç'
						find_order(message, orders).price += int(prices['flatwhite'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.flatwhite\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ß–∞–π.
	@bot.message_handler(func=lambda message: message.text.lower() == '—á–∞–π')
	def tea(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).order += '\n–ß–∞–π'
						find_order(message, orders).buf = '—á–∞–π'
						find_order(message, orders).price += int(prices['tea'])
						find_order(message, orders).status_1 = 3
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.tea\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			print(222)
	# –í—ã–±–æ—Ä —Ä–∞–∑–º–µ—Ä–∞.
	@bot.message_handler(func=lambda message: message.text.lower() == '–º–∞–ª–µ–Ω—å–∫–∏–π')
	def switch_size_small(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 2:
						find_order(message, orders).order += ' ' + message.text
						if find_order(message, orders).buf == '–∫–∞–ø—É—á–∏–Ω–æ':
							find_order(message, orders).price += int(prices['capuchino_s'])
						elif find_order(message, orders).buf == '–ª–∞—Ç—Ç–µ':
							find_order(message, orders).price += int(prices['latte_s'])
						elif find_order(message, orders).buf == '—Ä–∞—Ñ':
							find_order(message, orders).price += int(prices['raf_s'])
						elif find_order(message, orders).buf == '–∫–∞–∫–∞–æ':
							find_order(message, orders).price += int(prices['cacao_s'])
						elif find_order(message, orders).buf == '–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥':
							find_order(message, orders).price += int(prices['hotcho_s'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.switch_size_small\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å—Ä–µ–¥–Ω–∏–π')
	def switch_size_medium(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 2:
						find_order(message, orders).order += ' ' + message.text
						if find_order(message, orders).buf == '–∫–∞–ø—É—á–∏–Ω–æ':
							find_order(message, orders).price += int(prices['capuchino_m'])
						elif find_order(message, orders).buf == '–ª–∞—Ç—Ç–µ':
							find_order(message, orders).price += int(prices['latte_m'])
						elif find_order(message, orders).buf == '—Ä–∞—Ñ':
							find_order(message, orders).price += int(prices['raf_m'])
						elif find_order(message, orders).buf == '–∫–∞–∫–∞–æ':
							find_order(message, orders).price += int(prices['cacao_m'])
						elif find_order(message, orders).buf == '–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥':
							find_order(message, orders).price += int(prices['hotcho_m'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.switch_size_medium\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '–±–æ–ª—å—à–æ–π')
	def switch_size_large(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 2:
						find_order(message, orders).order += ' ' + message.text
						if find_order(message, orders).buf == '–∫–∞–ø—É—á–∏–Ω–æ':
							find_order(message, orders).price += int(prices['capuchino_l'])
						elif find_order(message, orders).buf == '–ª–∞—Ç—Ç–µ':
							find_order(message, orders).price += int(prices['latte_l'])
						elif find_order(message, orders).buf == '—Ä–∞—Ñ':
							find_order(message, orders).price += int(prices['raf_l'])
						elif find_order(message, orders).buf == '–∫–∞–∫–∞–æ':
							find_order(message, orders).price += int(prices['cacao_l'])
						elif find_order(message, orders).buf == '–≥–æ—Ä—è—á–∏–π —à–æ–∫–æ–ª–∞–¥':
							find_order(message, orders).price += int(prices['hotcho_l'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.switch_size_large\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å—Ç–∞–Ω–¥–∞—Ä—Ç')
	def switch_size_standart(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 2:
						find_order(message, orders).order += ' ' + message.text
						if find_order(message, orders).buf == '—ç—Å–ø—Ä–µ—Å—Å–æ':
							find_order(message, orders).price += int(prices['espresso'])
						elif find_order(message, orders).buf == '–∞–º–µ—Ä–∏–∫–∞–Ω–æ':
							find_order(message, orders).price += int(prices['americano'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.switch_size_standart\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '–¥–æ–ø–ø–∏–æ')
	def switch_size_dop(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 2:
						find_order(message, orders).order += ' ' + message.text
						if find_order(message, orders).buf == '—ç—Å–ø—Ä–µ—Å—Å–æ':
							find_order(message, orders).price += int(prices['espresso_dop'])
						elif find_order(message, orders).buf == '–∞–º–µ—Ä–∏–∫–∞–Ω–æ':
							find_order(message, orders).price += int(prices['americano_dop'])
						bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–æ–∫?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.switch_size_dop\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –î–æ–±–∞–≤–∫–∏
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–∞—Ö–∞—Ä')
	def sugar_switch(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 3:
						find_order(message, orders).status_1 = 'sugar'
						bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ?', reply_markup=board.sugarqu)
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.sugar\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–∞—Ö–∞—Ä–æ–∑–∞–º–µ–Ω–∏—Ç–µ–ª—å')
	def sugarzam_switch(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 3:
						find_order(message, orders).status_1 = 'sugarzam'
						bot.send_message(message.from_user.id, '–°–∫–æ–ª—å–∫–æ?', reply_markup=board.sugarqu)
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.sugarzam\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–∏—Ä–æ–ø')
	def syrup_switch(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 3:
						find_order(message, orders).status_1 = 'syrup'
						bot.send_message(message.from_user.id, '–ö–∞–∫–æ–π?')
						find_order(message, orders).price += 4
						find_order(message, orders).status_1 = 22
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.syrup_switch\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() == '–∫–æ—Ä–∏—Ü–∞')
	def cinnamon(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 3:
						find_order(message, orders).order += ', –ö–æ—Ä–∏—Ü–∞'
						bot.send_message(message.chat.id, '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n' + \
							find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
							str(find_order(message,orders).price) + ' –≥—Ä–Ω.')
						bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –µ—â—ë?üòä', reply_markup = board.dopmenu0)
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.cinnamon\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	@bot.message_handler(func=lambda message: message.text.lower() in ['–±–µ–∑ —Å–∞—Ö–∞—Ä–∞', '1', '2', '3', '4'])
	def sugar_sugarzam(message):
		try:
			if db.ordrsqu(message) != None:
				try:
					if find_order(message, orders).status_1 == 'sugar':
						find_order(message, orders).order += ', –°–∞—Ö–∞—Ä: ' + message.text
						bot.send_message(message.chat.id, '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n' + \
							find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
							str(find_order(message,orders).price) + ' –≥—Ä–Ω.')
						bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –µ—â—ë?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
					elif find_order(message, orders).status_1 == 'sugarzam':
						find_order(message, orders).order += ', –°–∞—Ö–∞—Ä–æ–∑–∞–º–µ–Ω–∏—Ç–µ–ª—å: ' + message.text
						bot.send_message(message.chat.id, '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n' + \
							find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
							str(find_order(message,orders).price) + ' –≥—Ä–Ω.')
						bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –µ—â—ë?üòä', reply_markup = board.dopmenu0)
						find_order(message, orders).status_1 = 3
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.sugar_sugarzam\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ö–Ω–æ–ø–∞–∫–∞ '–ì–æ—Ç–æ–≤–æ'
	@bot.message_handler(func=lambda message: message.text.lower() == '–≥–æ—Ç–æ–≤–æ')
	def done(message):
		try:
			if db.whatwrns(message) < warns_max:
				try:
					if find_order(message, orders).status_1 == 1:
						find_order(message, orders).status_2 = True
						bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É(–∏ —É–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª–π—Å—Ç–∞, \
						–≤—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—èü•∫)')
						find_order(message, orders).status_1 = 10
					elif find_order(message, orders).status_1 == 3:
						find_order(message, orders).status_1 = 1
						bot.send_message(message.from_user.id, '–ñ–µ–ª–∞–µ—Ç–µ –µ—â—ë –Ω–∞–ø–∏—Ç–æ–∫?üòä', \
							reply_markup=board.potablemenu1)				
				except:
					orders.remove(find_order(message, orders))
					bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ crtorder.done\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞
	@bot.message_handler(func=lambda message: message.text.lower() == '–≤—Å—ë –≤–µ—Ä–Ω–æ')
	def vsyook(message):
		try:
			if db.whatwrns(message) < warns_max:
				if find_order(message, orders).status_1 == 10:
					if len(modersid_online) != 0:
						bot.send_message(message.chat.id, '–ó–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!üòâüëç')
						#=================
						for m_id in modersid_online:
							inline_1 = telebot.types.InlineKeyboardMarkup(row_width=1)
							button = telebot.types.InlineKeyboardButton(text='–ü—Ä–∏–Ω—è—Ç—å', \
								callback_data=str(message.from_user.id))
							inline_1.add(button)
							bot.send_message(m_id, db.finduser(message)[1] + ' [o:' + str(db.finduser(message)[3]) \
								+ '/w:' + str(db.finduser(message)[4]) + '] —Å–æ–∑–¥–∞–ª –∑–∞–∫–∞–∑:\n' + \
									find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' +
								str(find_order(message, orders).price) + ' –≥—Ä–Ω.', reply_markup = inline_1)
						#=================
						msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
							' [USER  ' + str(message.from_user.id) + ']' \
							' –°–æ–∑–¥–∞–ª –∑–∞–∫–∞–∑:\n' + \
							'================================================================================' + \
							find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
							str(find_order(message, orders).price) + ' –≥—Ä–Ω.\n' + \
							'================================================================================'
						log = open('logs/log_' + log_data + '.txt', 'a')
						log.write(msg + '\n')
						log.close()
						print(msg)
						orders_2.append(str(message.from_user.id))
						orders.remove(find_order(message, orders))
						global orderspersm
						orderspersm =+ 1
						db.ordrsqu(message, 1)
						db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
					else:
						bot.send_message(message.chat.id, '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –Ω–µ—Çüò¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')
						db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
	@bot.message_handler(func=lambda message: message.text.lower() == '–∏–∑–±—Ä–∞–Ω–Ω—ã–π')
	def favorite(message):
		try:
			if db.ordrsqu(message) != None:
				if db.getfavorite(message) != False:
					find_order(message, orders).order = db.getfavorite(message)
					find_order(message, orders).price = db.getfavorite_price(message)
					bot.send_message(message.chat.id, '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n' + \
								find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
								str(find_order(message,orders).price) + ' –≥—Ä–Ω.')
					bot.send_message(message.chat.id, '–ß—Ç–æ-—Ç–æ –µ—â—ë?üòä', reply_markup = board.potablemenu1)
					find_order(message, orders).status_1 = 1
				else:
					bot.send_message(message.chat.id, '–£ –≤–∞—Å –µ—â—ë –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æüòï')
					db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
	@bot.message_handler(func=lambda message: message.text.lower() == '—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
	def infavorite(message):
		try:
			if db.whatwrns(message) < warns_max:
				if db.ordrsqu(message) != None:
					db.infavorite(message, find_order(message, orders).order)
					db.infavorite_price(message, find_order(message, orders).price)
					bot.send_message(message.chat.id, '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æüëå', reply_markup = board.potablemenu1)
			else:
				bot.send_message(message.from_user.id, '–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ωüò°. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É.')
				db.whatarnk(message, bot, board.mainmenu0, board.mainmenu1, board.mainmenu2)
		except:
			pass
	# –ü–æ–ª—É—á–µ–Ω–º–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
	@bot.message_handler(func=lambda message: True, content_types=['text'])
	def send_text(message):
		try:
			if db.ordrsqu(message) != None:
				global communication_id, communication_id_moder, unban
				if find_order(message, orders) == 'Not in list':
					# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–µ–±—è –≤ –∞–¥–º–∏–Ω—ã —á–µ—Ä–µ–∑ –ø–∞—Ä–æ–ª—å
					if message.text == password:
						db.addme(message)
						db.admsim(adminsid)
						msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
							' [USER  ' + str(message.from_user.id) + '] –í–≤–µ–ª –∞–¥–º–∏–Ω –ø–∞—Ä–æ–ª—å'
						log = open('logs/log_' + log_data + '.txt', 'a')
						log.write(msg + '\n')
						log.close()
						print(msg)
					# –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
					elif communication_id != None:
						if message.from_user.id == communication_id_moder:
							bot.send_message(communication_id, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–∞—à–µ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n' + message.text)
							msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
								' [MODER ' + str(communication_id_moder) + \
								'] –ù–∞–ø–∏—Å–∞–ª ' + str(communication_id) + ': ' + message.text
							log = open('logs/log_' + log_data + '.txt', 'a')
							log.write(msg + '\n')
							log.close()
							print(msg)
						elif str(message.from_user.id) == str(communication_id):
							bot.send_message(communication_id_moder, '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ' + communication_id + \
								':\n' + message.text)
							msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
								' [USER  ' + str(communication_id) + \
								'] –ù–∞–ø–∏—Å–∞–ª ' + str(communication_id_moder) + ': ' + message.text
							log = open('logs/log_' + log_data + '.txt', 'a')
							log.write(msg + '\n')
							log.close()
							print(msg)
					# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞/–º–æ–¥–µ—Ä–∞(—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
					elif message.from_user.id in adminsid:
						global addadmin
						global addmoder
						global deladmin
						if addadmin == True:
							if db.admadd(message) == True:
								db.admsim(adminsid)
								msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
									' [ADMIN ' + str(message.from_user.id) + \
									'] –ù–∞–∑–Ω–∞—á–∏–ª ' + message.text + ' –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º'
								log = open('logs/log_' + log_data + '.txt', 'a')
								log.write(msg + '\n')
								log.close()
								print(msg)
								bot.send_message(message.chat.id, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω. ' + \
												'–ï–º—É –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.')
							else:
								bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
							addadmin = False
						elif addmoder == True:
							if db.modadd(message) == True:
								db.mdrsim(modersid)
								msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
									' [ADMIN ' + str(message.from_user.id) + \
									'] –ù–∞–∑–Ω–∞—á–∏–ª ' + message.text + ' –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º'
								log = open('logs/log_' + log_data + '.txt', 'a')
								log.write(msg + '\n')
								log.close()
								print(msg)
								bot.send_message(message.chat.id, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω. ' + \
												'–ï–º—É –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.')
							else:
								bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è')
							addmoder = False
						elif deladmin == True:
							if db.admormoddel(message, adminsid, modersid, modersid_online) == True:
								db.mdrsim(modersid)
								db.admsim(adminsid)
								msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
									' [ADMIN ' + str(message.from_user.id) + \
									'] –°–Ω—è–ª ' + message.text + ' —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏'
								log = open('logs/log_' + log_data + '.txt', 'a')
								log.write(msg + '\n')
								log.close()
								print(msg)
								bot.send_message(message.chat.id, '–£–¥–∞–ª—ë–Ω')
							else:
								bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
							deladmin = False
						elif unban == True:
							try:
								db.unban_bd(int(message.text))
								unban = False
								msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
										' [ADMIN ' + str(message.from_user.id) + \
										'] –†–∞–∑–±–∞–Ω–∏–ª ' + str(message.text)
								log = open('logs/log_' + log_data + '.txt', 'a')
								log.write(msg + '\n')
								log.close()
								print(msg)
								bot.send_message(message.from_user.id, message.text + ' —Ä–∞–∑–±–∞–Ω–µ–Ω')
								bot.send_message(int(message.text), '–í–∞—Å —Ä–∞–∑–±–∞–Ω–∏–ª–∏üòå')
							except:
								bot.send_message(message.from_user.id, '–û—à–∏–±–∫–∞')
				else:
					try:
						if find_order(message, orders).status_1 == 22:
							find_order(message, orders).order += ', –°–∏—Ä–æ–ø: ' + message.text
							find_order(message, orders).status_1 = 3
							bot.send_message(message.chat.id, '–í—ã –∑–∞–∫–∞–∑–∞–ª–∏:\n' + \
							find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
							str(find_order(message,orders).price) + ' –≥—Ä–Ω.')
							bot.send_message(message.from_user.id, '–ß—Ç–æ-—Ç–æ –µ—â—ë?üòä', reply_markup=board.dopmenu0)
						# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
						elif find_order(message, orders).status_2 == True:
							find_order(message, orders).order += '\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n' + message.text
							bot.send_message(message.chat.id, '–í–∞—à –∑–∞–∫–∞–∑:\n' + \
								find_order(message, orders).order + '\n\n–ö –æ–ø–ª–∞—Ç–µ: ' + \
								str(find_order(message,orders).price) + ' –≥—Ä–Ω.', reply_markup = board.allok)
							find_order(message, orders).status_2 = False
					except:
						pass
		except:
			pass
	# Callback
	@bot.callback_query_handler(func=lambda call: True)
	def callback_inline(call):
		if call.message.chat.id in modersid_online:
			for u in orders_2:
				if call.data == u:
					bot.send_message(u, '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ' + str(call.message.chat.id) + ' –ø—Ä–∏–Ω—è–ª –≤–∞—à –∑–∞–∫–∞–∑üòâ')
					inline_2 = telebot.types.InlineKeyboardMarkup(row_width=1)
					button3 = telebot.types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ', \
						callback_data='done'+str(u))
					button1 = telebot.types.InlineKeyboardButton(text='–°–≤—è–∑—å', \
						callback_data='communication'+str(u))
					button2 = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', \
						callback_data='delete' + str(u))
					inline_2.add(button3, button1, button2)
					bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, \
						reply_markup=inline_2)
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(call.from_user.id) + \
						'] –ü—Ä–∏–Ω—è–ª –∑–∞–∫–∞–∑ –æ—Ç ' + u
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					break
				elif call.data == 'communication' + u:
					global communication_id, communication_id_moder
					communication_id = u
					communication_id_moder = call.message.chat.id
					bot.send_message(call.message.chat.id, '–°–≤—è–∑—å —Å ' + u + ' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞',\
						reply_markup=board.end1)
					bot.send_message(u, '‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ' + str(call.message.chat.id) + ' –æ—Ç–∫—Ä—ã–ª —á–∞—Ç —Å –≤–∞–º–∏‚ÄºÔ∏è‚ÄºÔ∏è‚ÄºÔ∏è\n' + \
						'–í—ã –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞ —á–∞—Ç –æ—Ç–∫—Ä—ã—Ç(–Ω–æ —Å—Ç–∏–∫–µ—Ä—ã –æ–Ω –Ω–µ –ø–æ–ª—É—á–∏—Ç, –æ–Ω –Ω–∞–∫–∞–∑–∞–Ωüòù)')
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(call.from_user.id) + \
						'] –°–≤—è–∑–∞–ª—Å—è —Å ' + u
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					break
				elif call.data == 'done' + u:
					bot.send_message(u, '–í–∞—à –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤!üòé‚òïÔ∏è')
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(call.from_user.id) + \
						'] –ü—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –∑–∞–∫–∞–∑ –¥–ª—è ' + u
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					inline_3 = telebot.types.InlineKeyboardMarkup(row_width=1)
					button1 = telebot.types.InlineKeyboardButton(text='–°–≤—è–∑—å', \
						callback_data='communication'+ str(u))
					button2 = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', \
						callback_data='delete' + str(u))
					button3 = telebot.types.InlineKeyboardButton(text='+–í–∞—Ä–Ω', \
						callback_data='warn' + str(u))
					inline_3.add(button3, button1, button2)
					bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, \
						reply_markup=inline_3)
					break
				elif call.data == 'delete' + u:
					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, \
						text = str(u) + ' —É–¥–∞–ª—ë–Ω')
					orders_2.remove(u)
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(call.from_user.id) + \
						'] –£–¥–∞–ª–∏–ª –∑–∞–∫–∞–∑ –æ—Ç ' + u
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					break
				elif call.data == 'warn' + u:
					db.pluswarn(u, 1)
					bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, \
						text = str(u) + ' –Ω–µ –∑–∞–±—Ä–∞–ª –∑–∞–∫–∞–∑')
					bot.send_message(u, '–í–∞–º –≤—ã–¥–∞–Ω –≤—ã–≥–æ–≤–æ—Äüò°')
					msg = str(datetime.datetime.today().strftime("|%H:%M:%S|%d/%m/%Y|")) + \
						' [MODER ' + str(call.from_user.id) + \
						'] –í—ã–¥–∞–ª –≤–∞—Ä–Ω ' + u
					log = open('logs/log_' + log_data + '.txt', 'a')
					log.write(msg + '\n')
					log.close()
					print(msg)
					break

bot.polling(none_stop=True)
